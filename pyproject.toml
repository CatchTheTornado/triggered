[tool.poetry]
name = "triggered"
version = "0.1.0"
description = "Runtime engine that executes actions based on various trigger types, including AI-powered triggers."
authors = ["Your Name <you@example.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.7"
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
croniter = "^2.0"
celery = "^5.3"
typer = "^0.12.3"
watchdog = "^4.0"
opentelemetry-api = "^1.25.0"
opentelemetry-sdk = "^1.25.0"
opentelemetry-instrumentation-logging = "^0.47b0"
opentelemetry-exporter-otlp = "^1.25.0"
opentelemetry-instrumentation-fastapi = "^0.47b0"
rich = "^13.7"
httpx = "^0.27.0"
huggingface-hub = "^0.23.0"
ollama = "^0.5.0"
jinja2 = "^3.1.3"
litellm = "^1.30.7"
setuptools = "<81.0.0"
psutil = "^5.9.8"
sqlalchemy = "^2.0.0"
redis = "^5.0.0"
amqp = "^5.2.0"

[tool.poetry.extras]
local-model = ["llama-cpp-python"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.2"
pytest-asyncio = "^0.23.5"
pytest-cov = "^4.1.0"
black = "^24.1.1"
isort = "^5.13.2"
flake8 = "^7.0.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
triggered = "triggered.cli:app"

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = [
    "asyncio: mark test as async"
]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=triggered"

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true 